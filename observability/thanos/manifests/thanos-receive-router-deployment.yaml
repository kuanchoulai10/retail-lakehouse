apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: thanos-receive-router
    app.kubernetes.io/instance: thanos-receive
    app.kubernetes.io/name: thanos-receive
    app.kubernetes.io/version: v0.39.2
  name: thanos-receive-router
  namespace: thanos
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: thanos-receive-router
      app.kubernetes.io/instance: thanos-receive
      app.kubernetes.io/name: thanos-receive
  template:
    metadata:
      labels:
        app.kubernetes.io/component: thanos-receive-router
        app.kubernetes.io/instance: thanos-receive
        app.kubernetes.io/name: thanos-receive
        app.kubernetes.io/version: v0.39.2
    spec:
      containers:
        - args:
            - receive
            - --log.level=info
            - --log.format=logfmt
            - --grpc-address=0.0.0.0:10901
            - --http-address=0.0.0.0:10902
            - --remote-write.address=0.0.0.0:19291
            - --receive.replication-factor=3
            - --receive.hashrings-file=/var/lib/thanos-receive/hashrings.json
            - --label=replica="$(NAME)"
            - --label=receive="true"
            - |-
              --tracing.config="config":
                "client_type": "grpc"
                "endpoint": "jaeger-thanos-collector.jaeger.svc.cluster.local:4317"
                "insecure": true
                "retry_config":
                  "retry_enabled": true
                  "retry_initial_interval": "1s"
                  "retry_max_elapsed_time": "30s"
                  "retry_max_interval": "5s"
                "sampler_param": 100
                "sampler_type": "ratelimiting"
                "service_name": "thanos-receive"
                "timeout": "10s"
              "type": "OTLP"
          env:
            - name: NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: HOST_IP_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          image: quay.io/thanos/thanos:v0.39.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /-/healthy
              port: 10902
              scheme: HTTP
            periodSeconds: 30
          name: thanos-receive
          ports:
            - containerPort: 10901
              name: grpc
            - containerPort: 10902
              name: http
            - containerPort: 19291
              name: remote-write
          readinessProbe:
            failureThreshold: 20
            httpGet:
              path: /-/ready
              port: 10902
              scheme: HTTP
            periodSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65534
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/lib/thanos-receive
              name: hashring-config
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        fsGroup: 65534
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: thanos-receive-router
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            name: hashring-config
          name: hashring-config
